id: urn:dmb:dp:my_domain.my_data_product.1
name: my data product
fullyQualifiedName: My Data Product
description: this data product is representing the xxx functional entity
kind: dataproduct
domain: my_domain
version: 1.0.0
environment: development
dataProductOwner: tom_smith_corp.com
dataProductOwnerDisplayName: Tom Smith
email: mailto:distribution_list@corp.com
informationSLA: 2WD
status: DRAFT
maturity: Strategic
billing: {}
tags: []
specific: {}
components:
  - id: urn:dmb:cmp:my_domain.my_data_product.1.my_raw_s3_port
    name: my raw s3 port
    fullyQualifiedName: My Raw S3 Port
    description: s3 raw output port
    kind: outputport
    version: 1.0.1
    infrastructureTemplateId: microservice-id-1
    useCaseTemplateId: template-id-1
    allows: [user-1]
    owners: [user-2]
    dependsOn: []
    platform: CDP on AWS
    technology: s3_cdp
    outputPortType: Files
    creationDate: 05-04-2022 16:53:00
    startDate:
    processDescription: this output port is generated by a Spark Job scheduled every day at 2AM and it lasts for approx 2 hours
    billingPolicy: 5$ for each full scan
    securityPolicy: In order to consume this output port an additional security check with compliance must be done
    consumerPolicy: This is only for HR department and not suitable for institutional reporting.
    SLO:
      intervalOfChange: 1 hours
      timeliness: 1 minutes 
    endpoint: https://myurl/development/my_domain/my_data_product/1.0.0/my_raw_s3_port
    tags: []
    sampleData: {}
    schema: []
    semanticLinking: {}
    specific:
      directory: history
      bucket: ms-datamesh-s3
  - id: urn:dmb:cmp:my_domain.my_data_product.1.my_view_impala_port
    name: my view impala port
    fullyQualifiedName: My View Impala Port
    description: impala view output port
    kind: outputPort
    version: 1.1.0
    infrastructureTemplateId: microservice-id-2
    useCaseTemplateId: template-id-2
    allows: [user-1]
    owners: [user-2]
    dependsOn: [urn:dmb:cmp:my_domain.my_data_product.1.my_raw_s3_port]
    platform: CDP on AWS
    technology: impala_cdp
    outputPortType: SQL
    creationDate: 05-04-2022 17:00:00
    startDate:
    processDescription:
    billingPolicy:
    securityPolicy:
    consumerPolicy:
    SLO:
      intervalOfChange: 1 hours
      timeliness: 1 minutes
    endpoint:
    tags: []
    sampleData: {}
    schema: []
    semanticLinking: {}
    specific:
      database: my_database
      table: my_table
      location: /my_path
      schema:
        firstName: string
        lastName: string
      format: PARQUET
  - id: urn:dmb:cmp:my_domain.my_data_product.1.my_spark_workload
    name: my spark workload
    fullyQualifiedName: My Spark workload
    description: spark batch workload
    kind: workload
    version: 1.1.1
    infrastructureTemplateId: microservice-id-3
    useCaseTemplateId: template-id-3
    platform: CDP on AWS
    technology: spark
    workloadType: batch
    connectionType: DataPipeline
    tags: []
    readsFrom: [urn:dmb:ex:mainframe_db2_database]
    specific:
      artifactory: ms-datamesh-s3
      artefact: /path/to/my/spark/workload.jar
      service: my_cdp_service
      cluster: my_cde_cluster
      className: com.mycompany.MySparkApp
      args:
       - arg1
       - arg2
      driverCores: 1
      driverMemory: 4g
      executorCores: 4
      executorMemory: 4g
      numExecutors: 3
      schedule:
        cronExpression: 0 0 0,22 ? * * *
  - id: urn:dmb:cmp:my_domain.my_data_product.1.my_observability
    name: my observability
    fullyQualifiedName: My Observability
    description: observability for my data product
    endpoint: /develop/my_domain/my_data_product/1.0.0/obs
    completeness:
    dataProfiling:
    freshness:
    availability:
    dataQuality:
    specific:
      restApiName: obs_api
      stageName: data_mesh
      bucket: ms-datamesh-s3
      obsEndpoint:
        - artifact: path/to/my/obs_dq.jar
          handler: com.mycompany.MyHandler::handleRequest
          lambdaname: my_data_product_obs_dq
          awsResourceName: my_data_product_obs_dq
          awsResourcePath: /data_quality
        - artifact: path/to/my/obs_workload.jar
          handler: com.mycompany.MyHandler::handleRequest
          lambdaname: my_data_product_obs_workload
          awsResourceName: my_data_product_obs_workload
          awsResourcePath: /workload
